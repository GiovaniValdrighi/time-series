myjpg <- load.image('image1.jpg')
plot(myjpg,  xaxt='n', ann=FALSE)
library(imager)
model1 <- Arima(FRED_pre, order = c(2, 1,1), seasonal = c(3, 0, 1), lambda = lambda)
myjpg <- load.image('image1.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
library(tseries)
library(zoo)
library(ggplot2)
library(forecast)
library(dplyr)
library(lmtest)
library(pander)
library(imager)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(cds) == 79)),
transfer=list(c(1, 1)))
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(cds) == 79)),
transfer=list(c(1, 1)))
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT) == 79)),
transfer=list(c(1, 1)))
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(1, 1)))
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(1, 1)), method = 'ML')
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(0, 1)), method = 'ML')
summary(mod.arimax)
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(1, 0)), method = 'ML')
library(TSA)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(2, 1)), method = 'ML')
summary(mod.arimax)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(2, 1)), method = 'ML')
plot(fitted(mod.arimax))
lines(FRED)
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
library(tseries)
library(zoo)
library(ggplot2)
library(forecast)
library(dplyr)
library(lmtest)
library(pander)
library(imager)
library(TSA)
plot(FRED, main = "FRED Real x Predicted with decreasing effect")
lines(fitted(mod.arimax), col = 'red')
fitted(mod.arimax)
plot(fitted(model.arimax))
plot(fitted(mod.arimax))
plot(FRED, main = "FRED Real x Predicted with decreasing effect")
lines(fitted(mod.arimax), col = 'red')
plot(FRED, main = "FRED Real x Predicted with decreasing effect")
lines(fitted(mod.arimax), col = 'red')
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red')
lines(FRED)
FRED
plot(FRED)
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red')
lines(BoxCox(FRED, lambda = lambda))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red')
lines(BoxCox(FRED, lambda = lambda))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red')
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=TRUE,
xtransf=data.frame(Jul2008=1 * (seq(fred_FIT$DATE) == 79)),
transfer=list(c(2, 1)), method = 'ML')
pander(mod.arimax)
temporary_const_eff
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'ML')
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
pander(mod.arimax)
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red')
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
fitted(mod.arimax)
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
eval_temp_effect
length(temporary_const_eff)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(eval_temp_effect)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(eval_temp_effect, type = 'l')
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*0.2868
}
plot(eval_temp_effect, type = 'l')
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(eval_temp_effect, type = 'l')
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(eval_temp_effect, type = 'l', main = "AR(1) effect")
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
summary(model8)
checkresiduals(model8, test = FALSE)
plot(forecast(model8, h = 48, lambda =lambda, biasadj = TRUE), main = "FRED series x Forecast of pre-intervention model")
length(eval_temp_effect)
evalfull_temp_effect <- eval_temp_effect + rep(0, 24)
plot(forecast(model8, h = 48, lambda =lambda, biasadj = TRUE, xreg = evalfull_temp_effect), main = "FRED series x Forecast of pre-intervention model")
lines(FRED)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 48, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24), main = "FRED series x Forecast of pre-intervention model")
lines(FRED)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24), main = "FRED series x Forecast of pre-intervention model")
lines(FRED)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model")
lines(FRED)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
eval_temp_effect
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
summary(mod.arimax)
aic(mod.arimax)
AIC(mod.arimax)
pander(mod.arimax)
myjpg <- load.image('image4.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
myjpg <- load.image('image7.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
pander(model8)
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
yjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model8, test = FALSE)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
myjpg <- load.image('image7.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(80,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
yjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model8, test = FALSE)
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
library(tseries)
library(zoo)
library(ggplot2)
library(forecast)
library(dplyr)
library(lmtest)
library(pander)
library(imager)
library(TSA)
data <- read.csv('TOTBUSSMNSA.csv')
title = 'Total Business Sales FRED (FED St. Louis Economics Research)'
#data before intervention
pre_intervention <- data %>% filter(DATE < as.Date("2008-09-01"))
fred_FIT <- data %>% filter(DATE < as.Date("2013-01-01"))
FRED_pre <- ts(pre_intervention$TOTBUSSMNSA,
start = c(2002, 1),
frequency = 12)
#fit data
FRED <- ts(fred_FIT$TOTBUSSMNSA, start = c(2002, 1), frequency = 12)
#all data
FRED_all <- ts(data$TOTBUSSMNSA, start = c(2002, 1), frequency = 12)
#check if variance is the same
autoplot(FRED, main = title) +
scale_x_continuous(breaks = scales::extended_breaks(10))
#series need stabilization
lambda <- BoxCox.lambda(FRED_all)
#data after stabilization
autoplot(BoxCox(FRED, lambda), main = title) +
scale_x_continuous(breaks = scales::extended_breaks(10))
autoplot(BoxCox(FRED_pre, lambda), main = title) +
scale_x_continuous(breaks = scales::extended_breaks(10))
#checking derivation
par(mfrow = c(2, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% plot(main = "Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% plot(main = "diff Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% diff() %>% plot(main = " diff diff Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% diff(lag = 12) %>% plot(main = "diff diff(12) Series")
#checking the acfs
par(mfrow = c(2, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% acf(main = "diff Series", lag.max = 48)
FRED_pre %>% BoxCox(lambda = lambda) %>% diff(lag = 12) %>% acf(main = "diff(12) Series", lag.max =  48)
#checking the pacfs
#par(mfrow = c(1, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% pacf(main = "diff Series", lag.max = 48)
FRED_pre %>% BoxCox(lambda = lambda) %>%diff(lag = 12) %>% pacf(main = "diff(12) Series", lag.max =  48)
model1 <- Arima(FRED_pre, order = c(2, 1,1), seasonal = c(3, 0, 1), lambda = lambda)
myjpg <- load.image('image1.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model1, test = FALSE)
model2 <- Arima(FRED_pre, order = c(2, 1,1), seasonal = c(2, 0, 1), lambda = lambda)
myjpg <- load.image('image2.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model2, test = FALSE)
model3 <- Arima(FRED_pre, order = c(2, 1,1), seasonal = c(2, 1, 1), lambda = lambda)
myjpg <- load.image('image3.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model3, test = FALSE)
plot(FRED_pre, lwd = 1.5, main = "FRED pre intervention Real x Predicted")
lines(model3$fitted, col = 'red', lwd = 1.5)
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
plot(forecast(model3, h = 48, lambda =lambda, biasadj = TRUE), main = "FRED series x Forecast of pre-intervention model")
lines(FRED)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
#julh of 2008 is the 80 row
permanent_const_eff <-  1*(seq_along(fred_FIT$DATE) >= 80)
model4 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), xreg = permanent_const_eff, lambda = lambda)
myjpg <- load.image('image4.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model4, test = FALSE)
plot(FRED, lwd = 1.5, main = "FRED Real x Predicted with permanent constant effect")
lines(model4$fitted, col = 'red', lwd = 1.5)
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
#julh of 2008 is the 80 row
temporary_const_eff <-  1*(seq_along(fred_FIT$DATE) == 80)
model5 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), xreg = temporary_const_eff, lambda = lambda)
myjpg <- load.image('image5.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
coeftest(model5)
checkresiduals(model5, test = FALSE)
plot(FRED, lwd = 1.5, main = "FRED Real x Predicted with temporary constant effect")
lines(model5$fitted, col = 'red', lwd = 1.5)
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
myjpg <- load.image('image7.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
yjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model8, test = FALSE)
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
pander(mod.arimax)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- -0.1517 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.1767
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
yjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
checkresiduals(model8, test = FALSE)
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
pander(model5)
pander(model6)
pander(model7)
pander(model8)
pander(mod.arimax)
pander(mod.arimax)
pander(model8)
pander(model8)
yjpg <- load.image('image8.jpg')
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
yjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
myjpg <- load.image('image8.jpg')
plot(myjpg,  xaxt='n', ann=FALSE, axes = FALSE)
# train data
train_data <- data %>% filter(DATE < as.Date("2013-01-01"))
FRED_train <- ts(train_data$TOTBUSSMNSA,
start = c(2002, 1),
frequency = 12)
train_data_12 <- data %>% filter(DATE < as.Date("2014-01-01"))
FRED_train_12 <- ts(train_data_12$TOTBUSSMNSA,
start = c(2002, 1),
frequency = 12)
interval_const_eff_train <-  1*((seq_along(train_data$DATE) >= 79 & seq_along(train_data$DATE) <= (79 + 3)))
model6_train <- Arima(FRED_train, order = c(2, 1, 1), seasonal = c(2, 1, 1), xreg = interval_const_eff_train, lambda = lambda)
summary(model6_train)
plot(forecast(model6_train, lambda =lambda, xreg = rep(1, each=12), biasadj = TRUE), main = "FRED series x Forecast with intervention model")
lines(FRED_train_12)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model6_train, lambda =lambda, xreg = rep(1, each=24), biasadj = TRUE), main = "FRED series x Forecast with intervention model")
lines(FRED)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model6_train, lambda =lambda, xreg = rep(1, each=24), biasadj = TRUE), main = "FRED series x Forecast with intervention model")
lines(FRED)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model6_train, lambda =lambda, xreg = rep(1, each=24), biasadj = TRUE), main = "FRED series x Forecast with intervention model")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- -0.1517 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.1767
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
#checking derivation
par(mfrow = c(2, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% plot(main = "Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% plot(main = "diff Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% diff() %>% plot(main = " diff diff Series")
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% diff(lag = 12) %>% plot(main = "diff diff(12) Series")
#checking the acfs
par(mfrow = c(2, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% acf(main = "diff Series", lag.max = 48)
FRED_pre %>% BoxCox(lambda = lambda) %>% diff(lag = 12) %>% acf(main = "diff(12) Series", lag.max =  48)
#checking the pacfs
#par(mfrow = c(1, 2))
FRED_pre %>% BoxCox(lambda = lambda) %>% diff() %>% pacf(main = "diff Series", lag.max = 48)
FRED_pre %>% BoxCox(lambda = lambda) %>%diff(lag = 12) %>% pacf(main = "diff(12) Series", lag.max =  48)
model1 <- Arima(FRED_pre, order = c(2, 1,1), seasonal = c(3, 0, 1), lambda = lambda)
summary(model1)
mod.arimax2 <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=1*(seq_along(fred_FIT$DATE) == 79),
transfer=list(c(1,0)), method = 'CSS')
summary(mod.arimax2)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
summary(mod.arimax)
#julh of 2008 is the 80 row
temporary_const_eff <-  1*(seq_along(fred_FIT$DATE) == 79)
model5 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), xreg = temporary_const_eff, lambda = lambda)
summary(model5)
coeftest(model5)
checkresiduals(model5, test = FALSE)
plot(FRED, lwd = 1.5, main = "FRED Real x Predicted with temporary constant effect")
lines(model5$fitted, col = 'red', lwd = 1.5)
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
mod.arimax <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=temporary_const_eff,
transfer=list(c(1,0)), method = 'CSS')
summary(mod.arimax)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect <- 0.2074 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect[i] = eval_temp_effect[i-1]*-0.2868
}
plot(ts(eval_temp_effect, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
mod.arimax2 <- arimax(BoxCox(FRED, lambda), order=c(2, 1, 1),
seasonal=list(order=c(2, 1, 1), frequency=12),
include.mean=FALSE,
xtransf=1*(seq_along(fred_FIT$DATE) == 79),
transfer=list(c(1,0)), method = 'CSS')
summary(mod.arimax2)
par(mfrow = c(1, 2))
plot(fitted(mod.arimax2), main = "FRED Real x Predicted with decreasing effect", col = 'red', lwd = 2)
lines(BoxCox(FRED, lambda = lambda))
legend("topleft", legend=c("Predictions", "Real values"), col=c('red','black'), lty = 1:1, cex=0.8)
eval_temp_effect2 <- -0.1517 * temporary_const_eff
for(i in seq(81,132)){
eval_temp_effect2[i] = eval_temp_effect2[i-1]*-0.1767
}
plot(ts(eval_temp_effect2, start = c(2002, 1), frequency = 12), type = 'l', main = "AR(1) effect", ylab = "Z_t")
model8 <- Arima(FRED, order = c(2, 1, 1), seasonal = c(2, 1, 1), lambda = lambda, xreg = eval_temp_effect)
summary(model8)
checkresiduals(model8, test = FALSE)
par(mfrow = c(2, 1))
plot(forecast(model8, h = 12, lambda =lambda, biasadj = TRUE, xreg = rep(0, 12)), main = "FRED series x Forecast of pre-intervention model 12 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
plot(forecast(model8, h = 24, lambda =lambda, biasadj = TRUE, xreg = rep(0, 24)), main = "FRED series x Forecast of pre-intervention model 24 months")
lines(FRED_all)
legend("topleft", legend=c("Forecast mean",  "90%", "95%", "Real values"), col=c('blue','#596DD5', "#D5DBFF" ,'black' ), lty = 1:1, cex=0.8)
